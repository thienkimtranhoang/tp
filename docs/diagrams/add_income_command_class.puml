@startuml

hide circle
skinparam classAttributeIconSize 0

package budgetflow.command {

    class "{abstract} \n AddIncomeCommand" {
        - {static} final Logger logger
        + AddIncomeCommand(String input)
        + execute(List<Income> incomes, ExpenseList expenseList)
        - Income extractIncome(String input)
        - static void verifyMissingOrIncorrect(String input) throws MissingDateException
    }
}

package budgetflow.exception {
    class "<<interface>> \n MissingDateException"
    class "<<interface>> \n InvalidNumberFormatException"
    class "<<interface>> \n MissingAmountException"
    class "<<interface>> \n MissingCategoryException"
    class "<<interface>> \n MissingIncomeException"
}

package budgetflow.expense {
    class ExpenseList
}

package budgetflow.income {
    class Income {
        + String getCategory()
        + double getAmount()
        + String getDate()
    }
}

package budgetflow.parser {
    class DateValidator {
        + static boolean isValidDate(String date)
    }
}

class "{abstract} \n Command" {
    + Command(String input)
    + CommandType commandType
}

"{abstract} \n AddIncomeCommand" --|> "{abstract} \n Command"
"{abstract} \n AddIncomeCommand" ..> "<<interface>> \n MissingDateException" : throws
"{abstract} \n AddIncomeCommand" ..> "<<interface>> \n InvalidNumberFormatException" : throws
"{abstract} \n AddIncomeCommand" ..> "<<interface>> \n MissingAmountException" : throws
"{abstract} \n AddIncomeCommand" ..> "<<interface>> \n MissingCategoryException" : throws
"{abstract} \n AddIncomeCommand" ..> "<<interface>> \n MissingIncomeException" : throws
"{abstract} \n AddIncomeCommand" ..> Income : uses
"{abstract} \n AddIncomeCommand" ..> ExpenseList : uses
"{abstract} \n AddIncomeCommand" ..> DateValidator : uses

@enduml
