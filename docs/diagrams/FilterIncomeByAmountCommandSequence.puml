@startuml
actor User
participant "FilterIncomeByAmountCommand" as Command
participant "Regex Matcher" as Matcher
participant "Income" as Income
participant "Logger" as Logger

User -> Command: execute(incomes, expenseList)
activate Command
note right: Extract parameters from input\n(ex: "filter-income amount from/10 to/100")
Command -> Command: Remove COMMAND_PREFIX\nand trim input
Command -> Matcher: Compile and match "from/([0-9]+(\\.[0-9]+)?)"
Matcher --> Command: fromMatcher result
Command -> Matcher: Compile and match "to/([0-9]+(\\.[0-9]+)?)"
Matcher --> Command: toMatcher result

alt Invalid Input Format
    Command -> User: throw FinanceException("Invalid amount filter format. Usage: filter-income amount from/<minAmount> to/<maxAmount>")
else Valid Format
    Command -> Command: Parse minAmount & maxAmount
    alt minAmount > maxAmount
        Command -> User: throw FinanceException("Minimum amount should not be greater than maximum amount.")
    else
        Command -> Command: Initialize outputMessage with header
        loop For each Income in incomes
            Command -> Income: getAmount()
            alt Amount within [minAmount, maxAmount]
                Command -> Income: getCategory()
                Command -> Income: getDate()
                Command -> Command: Append income details to outputMessage
            end
        end
        Command -> Logger: info("Filtered incomes by amount: ...")
        Command -> User: Return outputMessage
    end
end
deactivate Command
@enduml